  spring.cloud.stream.function.definition=supplier;receiveAndForward;receive

    spring.cloud.stream.kafka.binder.configuration.schema.registry.url=http://localhost:8081

    spring.cloud.stream.bindings.supplier-out-0.destination=sensor-1
    spring.cloud.stream.bindings.supplier-out-0.producer.use-native-encoding=true
    spring.cloud.stream.kafka.bindings.supplier-out-0.producer.configuration.value.serializer=io.confluent.kafka.serializers.KafkaAvroSerializer
    spring.cloud.stream.kafka.bindings.supplier-out-0.producer.configuration.schema.registry.url=http://localhost:8081

    spring.cloud.stream.bindings.receiveAndForward-in-0.destination=sensor-1
    spring.cloud.stream.bindings.receiveAndForward-in-0.consumer.use-native-decoding=true
    spring.cloud.stream.kafka.bindings.receiveAndForward-in-0.consumer.configuration.value.deserializer=io.confluent.kafka.serializers.KafkaAvroDeserializer
    spring.cloud.stream.kafka.bindings.receiveAndForward-in-0.consumer.configuration.schema.registry.url=http://localhost:8081
  spring.cloud.stream.kafka.bindings.receiveAndForward-in-0.consumer.configuration.specific.avro.reader: true

  #streambridge
    spring.cloud.stream.source=sensor
    spring.cloud.stream.bindings.sensor-out-0.destination=sensor-2
    spring.cloud.stream.bindings.sensor-out-0.producer.use-native-encoding=true
    spring.cloud.stream.kafka.bindings.sensor-out-0.producer.configuration.value.serializer=io.confluent.kafka.serializers.KafkaAvroSerializer
    spring.cloud.stream.kafka.bindings.sensor-out-0.producer.configuration.schema.registry.url=http://localhost:8081

    spring.cloud.stream.bindings.receive-in-0.destination=sensor-2
    spring.cloud.stream.bindings.receive-in-0.consumer.use-native-decoding=true
    spring.cloud.stream.kafka.bindings.receive-in-0.consumer.configuration.value.deserializer=io.confluent.kafka.serializers.KafkaAvroDeserializer
    spring.cloud.stream.kafka.bindings.receive-in-0.consumer.configuration.schema.registry.url=http://localhost:8081
  spring.cloud.stream.kafka.bindings.receive-in-0.consumer.configuration.specific.avro.reader: true

    spring.cloud.stream.poller.fixed-delay=10000